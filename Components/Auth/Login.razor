@page "/auth/login"
@using System.ComponentModel.DataAnnotations
@using web_backoffice.Identity
@inject IAccountManagement Acct
@inject NavigationManager NavigationManager

<PageTitle>Login</PageTitle>

<section class="bg-gray-50">
  <div class="flex flex-col items-center px-6 py-8 mx-auto md:h-screen lg:py-0">
    <div class="w-full bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700">
      <div class="p-6 space-y-4 md:space-y-6 sm:p-8">
        <h1 class="text-xl font-bold text-center leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white">
            Log in to your account
        </h1>

        <EditForm Model="Input" OnValidSubmit="LoginUser" FormName="login" method="post">
            <div class="flex flex-col space-y-3">
                <DataAnnotationsValidator />
                <ValidationSummary class="flex flex-col items-left p-4 mb-4 text-sm text-red-900 rounded-lg bg-red-200" role="alert" />
                <div>
                    <label for="email" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Your email</label>
                    <div class="relative">
                        <div class="absolute inset-y-0 start-0 flex items-center ps-3.5 pointer-events-none">
                            <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 16">
                            <path d="m10.036 8.278 9.258-7.79A1.979 1.979 0 0 0 18 0H2A1.987 1.987 0 0 0 .641.541l9.395 7.737Z"/>
                            <path d="M11.241 9.817c-.36.275-.801.425-1.255.427-.428 0-.845-.138-1.187-.395L0 2.6V14a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2.5l-8.759 7.317Z"/>
                            </svg>
                        </div>
                        <InputText @bind-Value="Input.Email" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full ps-10 p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" autocomplete="username" aria-required="true" placeholder="name@example.com" />
                    </div>
                </div>
                <div>
                    <label for="password" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Password</label>
                    <div class="relative">
                        <div class="absolute inset-y-0 start-0 flex items-center ps-3.5 pointer-events-none">
                            <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M15.077.019a4.658 4.658 0 0 0-4.083 4.714V7H2a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2h-1.006V4.68a2.624 2.624 0 0 1 2.271-2.67 2.5 2.5 0 0 1 2.729 2.49V8a1 1 0 0 0 2 0V4.5A4.505 4.505 0 0 0 15.077.019ZM9 15.167a1 1 0 1 1-2 0v-3a1 1 0 1 1 2 0v3Z"/>
                            </svg>
                        </div>
                        <InputText type="password" @bind-Value="Input.Password" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full ps-10 p-2.5  dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" autocomplete="current-password" aria-required="true" placeholder="password" />
                    </div>
                </div>
                <button type="submit" class="w-full text-white bg-custom-gradient hover:bg-primary-900 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800">Log in</button>
                <p class="text-sm font-light text-gray-500">
                    Forgot password?
                    <a href="auth/forgotpassword" 
                        class="font-medium text-primary-600 hover:underline">
                        Try it here.
                    </a>
                </p>
                <p class="text-sm font-light text-gray-500">
                    Donâ€™t have an account yet? 
                    <a href="auth/register" 
                        class="font-medium text-primary-600 hover:underline">
                        Register Now.
                    </a>
                </p>
                <p class="text-sm font-light text-gray-500">
                    Resend the confirmation email
                    <a href="auth/resendmail" 
                        class="font-medium text-primary-600 hover:underline">
                        here.
                    </a>
                </p>
            </div>
        </EditForm>
      </div>
    </div>
  </div>
</section>

<section>
    @if (errors) {   
        @foreach (var error in errorList) {
            <div class="text-black">@error</div>
        }
    }
</section>

@code {
    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }
    private bool success, errors;
    private string[] errorList = [];
    public async Task LoginUser()
    {
        success = errors = false;
        errorList = [];
        var result = await Acct.LoginAsync(Input.Email!, Input.Password!);
        if (result.Succeeded)
        {
            success = true;
            Input.Email = Input.Password = string.Empty;
            if (!string.IsNullOrEmpty(ReturnUrl))
            {
                NavigationManager.NavigateTo(ReturnUrl);
            }
            else
            {
                NavigationManager.NavigateTo("/");
            }
        }
        else
        {
            errors = true;
            errorList = result.ErrorList;
        }
    }
    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";

        [Required]
        [DataType(DataType.Password)]
        [RegularExpression(@"^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[^\da-zA-Z]).{6,100}$", ErrorMessage = "The password must be at least 6 characters long and contain at least one uppercase letter, one lowercase letter, one digit, and one special character.")]        
        public string Password { get; set; } = "";

        [Display(Name = "Remember me?")]
        public bool RememberMe { get; set; }
    }
}
